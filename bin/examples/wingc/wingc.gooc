void func_0()
{
  zindex = 0x18;
  unk_F8 = 0;
  statusb = 0x30011;
  do
  {
    var var_0 = (0x300 + random(0x400, 0));
    do
    {
      animsequence(0, 112, 24, 3);
      animsequence(11, 112, 2, 3);
      fp[0x10] += 0x100;
    } while (!0);
    0, = (fp[0x10] < fp[0xc]);
    animframe = -0x100;
    do
    {
      animframe((animframe + 0x100), 1, 3);
    } while (!var_0);
    animframe(animframe, 30, 3);
    animframe = 0xa00;
    do
    {
      animframe((animframe + -0x100), 1, 3);
    } while (!((animframe + 0x100) <= 0xa00));
  }
}

void func_78()
{
  if (((misc(self->player, 0) < 0x64000) && (!unk_F8 && (player->statusa tst 0x1))))
  {
    var var_1 = 0x200;
    sendevent(0x1600, self->player, 1, self->self, var_1);
    unk_F8 = 0x100;
    stampstate = stampanim;
  }
  if ((unk_F8 && ((stampanim - stampstate) >= 0x24)))
  {
    stampstate = (stampanim + 0x12c);
    writeglobal(-0x100, 0x6a00);
  }
  if (!((readglobal(0,) == stampanim) && unk_F8))
    state 1;
}

void func_d4()

void func_d8()
{
  zindex = 0xffffffec;
  do
  {
    animsequence(0, 114, 63, 3);
  }
}

void func_e8()
{
  if (!(misc(self->player, 0) < 0x64000))
    state 3;
}

void func_f8()
{
  animpointer(0x7200);
  animframe = -0x100;
  do
  {
    animframe((animframe + 0x100), 1, 3);
  } while (!((animframe + -0x100) >= 0x100));
  do
  {
    animframe(animframe, 63, 3);
  }
}

void func_120()
{
  if (!(misc(self->player, 0) > 0xc8000))
    state 4;
}

void func_130()
{
  animpointer(0x7200);
  animframe = 0x1600;
  do
  {
    animframe((animframe + -0x100), 1, 3);
  } while (!((animframe + 0x100) <= 0x1500));
  state 2;
}

void func_154()
{
  zindex = 7.8125;
  do
  {
    animseq = 0;
    animframe(0, 63, 3);
  }
}

void func_168()
{
  if (!(readglobal(0,) == 0))
    state 6;
}

void func_178()
{
  rot.y = targetrot.y;
  rot.z = targetrot.y;
  rot.x = targetrot.z;
  do
  {
    audiob(0.2500, self->self, 12);
    audiob((0x399 + random(0xcc, 0)), self->self, 1);
    audiob(0x3, self->self, 7);
    playsound(0x1eb, 0x20083d9);
    animpointer(0x6c00);
    animframe = -0x100;
    do
    {
      animframe((animframe + 0x100), 1, 3);
    } while (!((animframe + -0x100) >= 0));
    animpointer(0x6e00);
    animframe = -0x100;
    do
    {
      animframe((animframe + 0x100), 1, 3);
    } while (!((animframe + 0x100) <= 0x800));
  }
}

void func_1dc()
{
  statusb = 0x42805;
  targetrot.y = 0;
  rot.y = targetrot.y;
  targetrot.x = 0x1000;
  approachyz = 0x400;
  pathprogress = 0.5000;
  writeglobal(0x100, 0x6a00);
  pctrans = pc;
  pathprogress += 0.2500;
  if ((pathprogress >= pathcount))
    pathprogress = (pathcount - 0x1);
  if (!(readglobal(0,) & 0x10000))
    state 8;
  if ((!readglobal(0,) && (pathprogress >= (pathcount - 0x500))))
    writeglobal(-0x100, 0x6a00);
}

void func_248()
{
  writeglobal(0x100, 0x6a00);
  statusb = 0x40000;
  writeglobal(0xffff, 0x400);
  var var_2 = targetrot.x;
  var var_3 = targetrot.y;
  var var_4 = targetrot.z;
  var var_5 = modeflagsa;
  var var_6 = modeflagsb;
  var var_7 = modeflagsc;
  targetrot.x = 0;
  targetrot.y = readglobal(0,);
  targetrot.z = 0;
  modeflagsa = readglobal(0,);
  modeflagsb = readglobal(0,);
  modeflagsc = readglobal(0,);
  var var_8 = 0xfffdf800;
  var var_9 = 0xc800;
  modeflagsc = fp[0x20];
  modeflagsb = fp[0x1c];
  modeflagsa = fp[0x18];
  targetrot.z = fp[0x14];
  targetrot.y = fp[0x10];
  targetrot.x = fp[0xc];
  rot.x = 0xe3;
  rot.y = (readglobal(0,) - 0x31c);
  rot.z = (readglobal(0,) + 0xe3);
  var var_10 = 0;
  spawn(1, 61, 4, 1, var_10);
  do
  {
    audiob(0.2500, self->self, 12);
    audiob((0x399 + random(0xcc, 0)), self->self, 1);
    audiob(0x3, self->self, 7);
    playsound(0x147, 0x20083d9);
    animpointer(0x6c00);
    animframe = -0x100;
    do
    {
      animframe((animframe + 0x100), 1, 3);
    } while (!vectormisca(0xfffa8800, self->modeflagsa, self->trans.x));
    animpointer(0x6e00);
    animframe = -0x100;
    do
    {
      animframe((animframe + 0x100), 1, 3);
    } while (!((animframe + 0x100) <= 0x800));
  }
}

void func_328()
{
  statusb = 0x40000;
  writeglobal((readglobal(0,) & 0xffffdffc), 0x400);
  field[0x160] = trans.x;
  field[0x164] = trans.y;
  field[0x168] = trans.z;
  rot.x = 0;
  rot.y = 0;
  rot.z = 0;
  trans.x = 0;
  trans.y = 0;
  trans.z = 0;
  spawn(1, 61, 23, 0);
  func_590();
  func_718();
  func_800();
  func_9c4();
  func_3ac();
  func_ad4();
  unkevent(0xe00, self->self, 0, self->self);
  animseq = 0;
  animframe(0, 1, 3);
  writeglobal(0xffff, 0x400);
  do
  {
    animseq = 0;
    animframe(0, 1, 3);
  } while (!misc(self->player, 0,));
  state 7;
}

void func_3ac()
{
  var var_11 = 0x200;
  spawn(1, 61, 4, 1, var_11);
  var var_12 = trans.y;
  var var_13 = scale.x;
  var var_14 = scale.y;
  var var_15 = scale.z;
  writeglobal((readglobal(0,) | 0x80000), 0x400);
  writeglobal(0, 0x3200);
  writeglobal(0x800, 0x3300);
  writeglobal(0x5c00, 0x3400);
  writeglobal(0x8400, 0x3500);
  scale.x = 0x2000;
  scale.y = 0x2000;
  scale.z = 0x2000;
  entryoperation(0x4b983673, 0x6);
  entryoperation(0x4bb03655, 0x6);
  entryoperation(0x4b985673, 0x6);
  entryoperation(0x4bb03655, 0x6);
  entryoperation(0x4b987673, 0x6);
  entryoperation(0x4bb03655, 0x6);
  entryoperation(0x4b989673, 0x6);
  entryoperation(0x4bb03655, 0x6);
  entryoperation(0x4b783673, 0x6);
  entryoperation(0x4bb03655, 0x6);
  entryoperation(0x4b785673, 0x6);
  entryoperation(0x4bb03655, 0x6);
  entryoperation(0x4b787673, 0x6);
  entryoperation(0x4bb03655, 0x6);
  writeglobal(0x100, 0x6a00);
  do
  {
    animpointer(0x5e00);
    animframe = -0x100;
    do
    {
      animframe((animframe + 0x100), 1, 3);
    } while (!var_15);
    animpointer(0x6000);
    animframe = -0x100;
    do
    {
      animframe((animframe + 0x100), 1, 3);
    } while (!((animframe + 0x100) <= 0xf00));
    if ((fp[0x1c] == 0x400))
      writeglobal(-0x100, 0x6a00);
    if (!random(0x3, 0))
    {
      animpointer(0x6600);
      animframe = -0x100;
      do
      {
        animframe((animframe + 0x100), 1, 3);
      } while (!((animframe + 0x100) <= 0xf00));
      animpointer(0x6800);
      animframe = -0x100;
      do
      {
        animframe((animframe + 0x100), 1, 3);
      } while (!((animframe + 0x100) <= 0x1c00));
      animpointer(0x6a00);
      animframe = -0x100;
      do
      {
        animframe((animframe + 0x100), 1, 3);
      } while (!((animframe + 0x100) <= 0x1300));
    }
    else
    {
      animpointer(0x6200);
      animframe = -0x100;
      do
      {
        animframe((animframe + 0x100), 1, 3);
      } while (!((animframe + 0x100) <= 0xa00));
      animpointer(0x6400);
      animframe = -0x100;
      do
      {
        animframe((animframe + 0x100), 1, 3);
      } while (!((animframe + 0x100) <= 0x1b00));
    }
    fp[0x1c] += 0x100;
  } while (!0);
  0, = (fp[0x1c] < 0x500);
  animseq = 0;
  animframe(0, 2, 3);
  entryoperation(0x4b983673, 0x2);
  entryoperation(0x4bb03655, 0x2);
  entryoperation(0x4b985673, 0x2);
  entryoperation(0x4bb03655, 0x2);
  entryoperation(0x4b987673, 0x2);
  entryoperation(0x4bb03655, 0x2);
  entryoperation(0x4b989673, 0x2);
  entryoperation(0x4bb03655, 0x2);
  entryoperation(0x4b783673, 0x2);
  entryoperation(0x4bb03655, 0x2);
  entryoperation(0x4b785673, 0x2);
  entryoperation(0x4bb03655, 0x2);
  entryoperation(0x4b787673, 0x2);
  entryoperation(0x4bb03655, 0x2);
  scale.z = fp[0x18];
  scale.y = fp[0x14];
  scale.x = fp[0x10];
  trans.y = fp[0xc];
  sendevent(0xc00, self->children, 0, self->self);
}

void func_574()
{
  if ((animframe == 0x900))
    animframe(0, 1, 3);
  else
    animframe((animframe + 0x100), 1, 3);
}

void func_590()
{
  var var_16 = 0x500;
  spawn(1, 61, 4, 1, var_16);
  scale.x = 0x1333;
  scale.y = 0x1333;
  scale.z = 0x1333;
  writeglobal((readglobal(0,) | 0x80000), 0x400);
  writeglobal(0, 0x3200);
  writeglobal(0x800, 0x3300);
  writeglobal(0x5c00, 0x3400);
  writeglobal(0x8400, 0x3500);
  entryoperation(0x4c8c81f3, 0x6);
  entryoperation(0x4c89d655, 0x6);
  entryoperation(0x4c8c8173, 0x6);
  entryoperation(0x4c89d655, 0x6);
  entryoperation(0x4c8c8273, 0x6);
  entryoperation(0x4c89d655, 0x6);
  writeglobal(0x100, 0x6a00);
  statusb |= 0x80000;
  targetrot.x = 0xc00;
  do
  {
    animpointer(0x5800);
    animframe = -0x100;
    do
    {
      animframe((animframe + 0x100), 1, 3);
    } while (!((animframe + 0x100) <= 0x1a00));
    audiob((0x399 + random(0xcc, 0)), self->self, 1);
    playsound(0xccc, 0x7872a549);
    animpointer(0x5a00);
    animframe = -0x100;
    do
    {
      animframe((animframe + 0x100), 1, 3);
    } while (!((animframe + 0x100) <= 0x1100));
    audiob((0x399 + random(0xcc, 0)), self->self, 1);
    playsound((0x2665 + random(0x666, 0)), 0x6cef4549);
    animframe = 0x200;
    do
    {
      animframe((animframe + 0x100), 1, 3);
    } while (!((animframe + 0x100) < 0x200));
    animframe(0x1500, 27, 3);
    animpointer(0x5c00);
    animframe = 0x900;
    do
    {
      targetrot.y = (rot.y + 0x800);
      func_574();
    } while (!stampanim);
    0, = ((stampanim - fp[0x10]) < 0x27);
    do
    {
      targetrot.y = (misc(player->trans.x, self->self) - 0x333);
      func_574();
    } while (((animframe + 0x100) < 0x1500));
    targetrot.y = misc(player->trans.x, self->self);
    if ((fp[0xc] == 0x200))
    {
      writeglobal(-0x100, 0x6a00);
      animframe = 0x900;
    }
    do
    {
      animframe((animframe + 0x100), 1, 3);
    } while (!(statusa tst 0x800));
    fp[0xc] += 0x100;
  } while (!0);
  0, = (fp[0xc] < 0x300);
  animseq = 0;
  animframe(0, 2, 3);
  statusb &= 0xfff7ffff;
  sendevent(0xc00, self->children, 0, self->self);
  entryoperation(0x4c8c81f3, 0x2);
  entryoperation(0x4c89d655, 0x2);
  entryoperation(0x4c8c8173, 0x2);
  entryoperation(0x4c89d655, 0x2);
  entryoperation(0x4c8c8273, 0x2);
  entryoperation(0x4c89d655, 0x2);
}

void func_718()
{
  var var_17 = 0x400;
  spawn(1, 61, 4, 1, var_17);
  writeglobal((readglobal(0,) | 0x80000), 0x400);
  writeglobal(0, 0x3200);
  writeglobal(0x800, 0x3300);
  writeglobal(0x5c00, 0x3400);
  writeglobal(0x8400, 0x3500);
  var var_18 = statusb;
  var var_19 = scale.x;
  var var_20 = scale.y;
  var var_21 = scale.z;
  var var_22 = trans.y;
  scale.x = 0x1333;
  scale.y = 0x1333;
  scale.z = 0x1333;
  groundy = trans.y;
  statusb = 0x4060;
  entryoperation(0x6bb03673, 0x6);
  entryoperation(0x6bb03655, 0x6);
  writeglobal(0x100, 0x6a00);
  do
  {
    velocity.y = 0x1a9000;
    if ((fp[0x20] == 0xb00))
      writeglobal(-0x100, 0x6a00);
    audiob((0x333 + random(0xcc, 0)), self->self, 1);
    playsound((0xccc + random(0x666, 0)), 0x369b2bc9);
    animpointer(0x5600);
    animframe = -0x100;
    do
    {
      animframe((animframe + 0x100), 1, 3);
    } while (!var_22);
    do
    {
      animframe(animframe, 1, 3);
    } while (((animframe + 0x100) <= 0x1900));
    fp[0x20] += 0x100;
  } while (!0);
  0, = (fp[0x20] < 0xc00);
  animseq = 0;
  animframe(0, 2, 3);
  trans.y = fp[0x1c];
  scale.z = fp[0x18];
  scale.y = fp[0x14];
  scale.x = fp[0x10];
  statusb = fp[0xc];
  sendevent(0xc00, self->children, 0, self->self);
  entryoperation(0x6bb03673, 0x2);
  entryoperation(0x6bb03655, 0x2);
}

void func_800()
{
  var var_23 = 0x100;
  spawn(1, 61, 4, 1, var_23);
  var var_24 = velocity.y;
  var var_25 = velocity.y;
  entryoperation(0x5db03673, 0x6);
  entryoperation(0x5db03655, 0x6);
  entryoperation(0x5db05673, 0x6);
  entryoperation(0x5db03655, 0x6);
  entryoperation(0x5db07673, 0x6);
  entryoperation(0x5db03655, 0x6);
  entryoperation(0x5db09673, 0x6);
  entryoperation(0x5db03655, 0x6);
  entryoperation(0x5db0b673, 0x6);
  entryoperation(0x5db03655, 0x6);
  entryoperation(0x5db0d673, 0x6);
  entryoperation(0x5db03655, 0x6);
  entryoperation(0x5db0f673, 0x6);
  entryoperation(0x5db03655, 0x6);
  entryoperation(0x5db11673, 0x6);
  entryoperation(0x5db03655, 0x6);
  writeglobal(0x100, 0x6a00);
  do
  {
    animpointer(0x7400);
    animframe = -0x100;
    do
    {
      animframe((animframe + 0x100), 1, 3);
    } while (!var_25);
    animframe(animframe, 10, 3);
    animpointer(0x7600);
    animframe = -0x100;
    do
    {
      animframe((animframe + 0x100), 1, 3);
    } while (!((animframe + 0x100) <= 0x1700));
    animpointer(0x7800);
    animframe = -0x100;
    do
    {
      animframe((animframe + 0x100), 1, 3);
    } while (!((animframe + 0x100) <= 0x1400));
    animframe(animframe, 10, 3);
    animpointer(0x7a00);
    animframe = -0x100;
    do
    {
      animframe((animframe + 0x100), 1, 3);
    } while (!((animframe + 0x100) <= 0x700));
    animpointer(0x7c00);
    animframe = -0x100;
    do
    {
      animframe((animframe + 0x100), 1, 3);
    } while (!((animframe + 0x100) <= 0x1600));
    animpointer(0x7e00);
    animframe = -0x100;
    do
    {
      animframe((animframe + 0x100), 1, 3);
    } while (!((animframe + 0x100) <= 0x1800));
    animframe(animframe, 10, 3);
    animpointer(0x8000);
    animframe = -0x100;
    do
    {
      animframe((animframe + 0x100), 1, 3);
    } while (!((animframe + 0x100) <= 0xe00));
    if ((fp[0x14] == 0x200))
    {
      writeglobal(-0x100, 0x6a00);
      animpointer(0x8200);
    }
    animframe = -0x100;
    do
    {
      animframe((animframe + 0x100), 1, 3);
    } while (!((animframe + 0x100) <= 0x1400));
    fp[0x14] += 0x100;
  } while (!0);
  0, = (fp[0x14] < 0x300);
  velocity.y = fp[0x10];
  animseq = 0;
  animframe(0, 2, 3);
  sendevent(0xc00, self->children, 0, self->self);
  entryoperation(0x5db03673, 0x2);
  entryoperation(0x5db03655, 0x2);
  entryoperation(0x5db05673, 0x2);
  entryoperation(0x5db03655, 0x2);
  entryoperation(0x5db07673, 0x2);
  entryoperation(0x5db03655, 0x2);
  entryoperation(0x5db09673, 0x2);
  entryoperation(0x5db03655, 0x2);
  entryoperation(0x5db0b673, 0x2);
  entryoperation(0x5db03655, 0x2);
  entryoperation(0x5db0d673, 0x2);
  entryoperation(0x5db03655, 0x2);
  entryoperation(0x5db0f673, 0x2);
  entryoperation(0x5db03655, 0x2);
  entryoperation(0x5db11673, 0x2);
  entryoperation(0x5db03655, 0x2);
  velocity.y = fp[0xc];
}

void func_9c4()
{
  var var_26 = 0x600;
  spawn(1, 61, 4, 1, var_26);
  writeglobal((readglobal(0,) | 0x80000), 0x400);
  writeglobal(0, 0x3200);
  writeglobal(0x800, 0x3300);
  writeglobal(0x5c00, 0x3400);
  writeglobal(0x8400, 0x3500);
  var var_27 = trans.y;
  var var_28 = scale.x;
  var var_29 = scale.y;
  var var_30 = scale.z;
  field[0x16c] = 0;
  scale.x = 0x1800;
  scale.y = 0x1800;
  scale.z = 0x1800;
  entryoperation(0x66955673, 0x6);
  entryoperation(0x6692f655, 0x6);
  writeglobal(0x100, 0x6a00);
  do
  {
    if ((fp[0x1c] == 0xb00))
    {
      writeglobal(-0x100, 0x6a00);
      animpointer(0x5400);
    }
    animframe = -0x100;
    do
    {
      animframe += 0x100;
      animframe(animframe, 1, 3);
      if (field[0x16c])
      {
        unk_14C = field[0x16c];
        audiob(0x3, self->unk_14C, 6);
        audiob(0, self->unk_14C, 0);
      }
      audiob((0x3d7 + random(0x51, 0)), self->self, 1);
      audiob(0, self->self, 9);
      playsound((0x8f5 + random(0x147, 0)), 0x6152e449);
      field[0x16c] = unk_14C;
      animframe += 0x100;
      animframe(animframe, 1, 3);
      animframe += 0x100;
      animframe(animframe, 1, 3);
      fp[0x20] += 0x100;
    } while (!0);
    0, = (fp[0x20] < 0x800);
    fp[0x1c] += 0x100;
  } while (!0);
  0, = (fp[0x1c] < 0xc00);
  animseq = 0;
  animframe(0, 2, 3);
  sendevent(0xc00, self->children, 0, self->self);
  entryoperation(0x66955673, 0x2);
  entryoperation(0x6692f655, 0x2);
  scale.z = fp[0x18];
  scale.y = fp[0x14];
  scale.x = fp[0x10];
  trans.y = fp[0xc];
}

void func_ad4()
{
  var var_31 = 0x300;
  spawn(1, 61, 4, 1, var_31);
  writeglobal((readglobal(0,) | 0x80000), 0x400);
  writeglobal(0, 0x3200);
  writeglobal(0x800, 0x3300);
  writeglobal(0x5c00, 0x3400);
  writeglobal(0x8400, 0x3500);
  var var_32 = trans.x;
  var var_33 = rot.y;
  trans.y += 0x3e800;
  trans.z -= 0x19000;
  trans.x -= 0x5000;
  rot.y = 0xffffffea;
  entryoperation(0x4d603673, 0x6);
  entryoperation(0x4db03655, 0x6);
  entryoperation(0x4d605673, 0x6);
  entryoperation(0x4db03655, 0x6);
  entryoperation(0x4d607673, 0x6);
  entryoperation(0x4db03655, 0x6);
  entryoperation(0x4d609673, 0x6);
  entryoperation(0x4db03655, 0x6);
  entryoperation(0x4d60b673, 0x6);
  entryoperation(0x4db03655, 0x6);
  entryoperation(0x4d60d673, 0x6);
  entryoperation(0x4db03655, 0x6);
  entryoperation(0x4d60f673, 0x6);
  entryoperation(0x4db03655, 0x6);
  entryoperation(0x4d611673, 0x6);
  entryoperation(0x4db03655, 0x6);
  writeglobal(0x100, 0x6a00);
  audiob((0x399 + random(0xcc, 0)), self->self, 1);
  audiob(0x5a, self->self, 6);
  audiob(0x999, self->self, 0);
  playsound(0, 0x3863afc9);
  animpointer(0x4400);
  animframe = -0x100;
  do
  {
    animframe((animframe + 0x100), 1, 3);
  } while (!var_33);
  animpointer(0x4600);
  animframe = -0x100;
  do
  {
    animframe((animframe + 0x100), 1, 3);
  } while (!((animframe + 0x100) <= 0x1300));
  animpointer(0x4800);
  animframe = -0x100;
  do
  {
    animframe((animframe + 0x100), 1, 3);
  } while (!((animframe + 0x100) <= 0x1300));
  animpointer(0x4a00);
  animframe = -0x100;
  do
  {
    animframe((animframe + 0x100), 1, 3);
  } while (!((animframe + 0x100) <= 0x1300));
  animpointer(0x4c00);
  animframe = -0x100;
  do
  {
    animframe((animframe + 0x100), 1, 3);
  } while (!((animframe + 0x100) <= 0x1300));
  animpointer(0x4e00);
  animframe = -0x100;
  do
  {
    animframe((animframe + 0x100), 1, 3);
  } while (!((animframe + 0x100) <= 0x1300));
  animpointer(0x5000);
  animframe = -0x100;
  do
  {
    animframe((animframe + 0x100), 1, 3);
  } while (!((animframe + 0x100) <= 0x1300));
  animpointer(0x5200);
  animframe = -0x100;
  do
  {
    animframe((animframe + 0x100), 1, 3);
  } while (!((animframe + 0x100) <= 0x1300));
  animpointer(0x5200);
  animframe = 0x900;
  do
  {
    animframe((animframe + -0x100), 1, 3);
  } while (!((animframe + 0x100) <= 0x900));
  animpointer(0x5000);
  animframe = 0x1400;
  do
  {
    animframe((animframe + -0x100), 1, 3);
  } while (!((animframe + -0x100) >= 0));
  audiob(0x5a, self->unk_14C, 6);
  audiob(0, self->unk_14C, 0);
  animpointer(0x4e00);
  animframe = 0x1400;
  do
  {
    animframe((animframe + -0x100), 1, 3);
  } while (!((animframe + -0x100) >= 0));
  animpointer(0x4c00);
  animframe = 0x1400;
  do
  {
    animframe((animframe + -0x100), 1, 3);
  } while (!((animframe + -0x100) >= 0));
  animpointer(0x4a00);
  animframe = 0x1400;
  do
  {
    animframe((animframe + -0x100), 1, 3);
  } while (!((animframe + -0x100) >= 0));
  animpointer(0x4800);
  animframe = 0x1400;
  do
  {
    animframe((animframe + -0x100), 1, 3);
  } while (!((animframe + -0x100) >= 0));
  animpointer(0x4600);
  animframe = 0x1400;
  do
  {
    animframe((animframe + -0x100), 1, 3);
  } while (!((animframe + -0x100) >= 0));
  writeglobal(-0x100, 0x6a00);
  animpointer(0x4400);
  animframe = 0x1400;
  do
  {
    animframe((animframe + -0x100), 1, 3);
  } while (!((animframe + -0x100) >= 0));
  animseq = 0;
  animframe(0, 2, 3);
  sendevent(0xc00, self->children, 0, self->self);
  entryoperation(0x4d603673, 0x2);
  entryoperation(0x4db03655, 0x2);
  entryoperation(0x4d605673, 0x2);
  entryoperation(0x4db03655, 0x2);
  entryoperation(0x4d607673, 0x2);
  entryoperation(0x4db03655, 0x2);
  entryoperation(0x4d609673, 0x2);
  entryoperation(0x4db03655, 0x2);
  entryoperation(0x4d60b673, 0x2);
  entryoperation(0x4db03655, 0x2);
  entryoperation(0x4d60d673, 0x2);
  entryoperation(0x4db03655, 0x2);
  entryoperation(0x4d60f673, 0x2);
  entryoperation(0x4db03655, 0x2);
  entryoperation(0x4d611673, 0x2);
  entryoperation(0x4db03655, 0x2);
  rot.y = fp[0x10];
  trans.x = fp[0xc];
}

void func_d9c(arg1, arg2)
{
  statusb = 0x700;
  var var_34 = arg1;
  if ((fp[0xc] == 0x1))
  {
    displaymode = 0x14600;
    scale.x = 0xa3;
    scale.y = 0x81;
    scale.z = 0x10000;
    writecolor(self->self, colormatrix.v1x, 0x1ff);
    writecolor(self->self, colormatrix.v1y, 0x1ff);
    writecolor(self->self, colormatrix.v1z, 0x1ff);
    writecolor(self->self, colormatrix.v2x, 0x1ff);
    writecolor(self->self, colormatrix.v2y, 0x1ff);
    writecolor(self->self, colormatrix.v2z, 0x1ff);
    writecolor(self->self, colormatrix.v3x, 0x1ff);
    writecolor(self->self, colormatrix.v3y, 0x1ff);
    writecolor(self->self, colormatrix.v3z, 0x1ff);
    writecolor(self->self, intensity.r, 0x1ff);
    writecolor(self->self, intensity.g, 0x1ff);
    writecolor(self->self, intensity.b, 0x1ff);
  }
  else
  {
    zindex = 7.8125;
    writecolor(self->self, colormatrix.v1x, 0x1ff);
    writecolor(self->self, colormatrix.v1y, 0x1ff);
    writecolor(self->self, colormatrix.v1z, 0x1ff);
    writecolor(self->self, colormatrix.v2x, 0x1ff);
    writecolor(self->self, colormatrix.v2y, 0x1ff);
    writecolor(self->self, colormatrix.v2z, 0x1ff);
    writecolor(self->self, colormatrix.v3x, 0xc8);
    writecolor(self->self, colormatrix.v3y, 0xc8);
    writecolor(self->self, colormatrix.v3z, 0xc8);
    writecolor(self->self, intensity.r, 0xc8);
    writecolor(self->self, intensity.g, 0xc8);
    writecolor(self->self, intensity.b, 0xc8);
    scale.x = 0xa3;
    scale.y = 0x103;
    scale.z = 0x10000;
  }
  animpointer(0x20800);
  velocity.y = arg2;
  trans.y = (parent->trans.y - velocity.y);
  do
  {
    animframe(fp[-0x30c], 63, 3);
  }
}

void func_e50()
{
  if (!(statusa tst 0.1250))
  {
    trans.y = (parent->trans.y - velocity.y);
    if ((trans.y > -0x8c00))
    {
      statusb &= 0xfffffeff;
      if (!(trans.y > 0x8c00))
        state 1;
    }
  }
}

void func_e80()
{
  var var_35 = 0;
  var var_36 = 0;
  var var_37 = 0;
  spawn(1, 61, 3, 3, var_37, var_36, var_35);
  animseq = 0;
  animframe(0, 9, 3);
  var var_38 = 0x100;
  var var_39 = 0x6000;
  var var_40 = 0;
  spawn(1, 61, 3, 3, var_40, var_39, var_38);
  animseq = 0;
  animframe(0, 9, 3);
  var var_41 = 0x200;
  var var_42 = 0x7800;
  var var_43 = 0;
  spawn(1, 61, 3, 3, var_43, var_42, var_41);
  animseq = 0;
  animframe(0, 9, 3);
  var var_44 = 0x300;
  var var_45 = 0xd800;
  var var_46 = 0;
  spawn(1, 61, 3, 3, var_46, var_45, var_44);
  animseq = 0;
  animframe(0, 9, 3);
  var var_47 = 0x400;
  var var_48 = 0xf000;
  var var_49 = 0;
  spawn(1, 61, 3, 3, var_49, var_48, var_47);
  animseq = 0;
  animframe(0, 9, 3);
  var var_50 = 0x500;
  var var_51 = 0x10800;
  var var_52 = 0;
  spawn(1, 61, 3, 3, var_52, var_51, var_50);
  animseq = 0;
  animframe(0, 9, 3);
  var var_53 = 0x600;
  var var_54 = 0x12000;
  var var_55 = 0;
  spawn(1, 61, 3, 3, var_55, var_54, var_53);
  animseq = 0;
  animframe(0, 9, 3);
  var var_56 = 0x700;
  var var_57 = 0x13800;
  var var_58 = 0;
  spawn(1, 61, 3, 3, var_58, var_57, var_56);
  animseq = 0;
  animframe(0, 9, 3);
  var var_59 = 0x800;
  var var_60 = 0x15000;
  var var_61 = 0;
  spawn(1, 61, 3, 3, var_61, var_60, var_59);
  animseq = 0;
  animframe(0, 9, 3);
  var var_62 = 0x900;
  var var_63 = 0x16800;
  var var_64 = 0;
  spawn(1, 61, 3, 3, var_64, var_63, var_62);
  animseq = 0;
  animframe(0, 9, 3);
  var var_65 = 0xa00;
  var var_66 = 0x18000;
  var var_67 = 0;
  spawn(1, 61, 3, 3, var_67, var_66, var_65);
  animseq = 0;
  animframe(0, 9, 3);
  var var_68 = 0xb00;
  var var_69 = 0x1e000;
  var var_70 = 0;
  spawn(1, 61, 3, 3, var_70, var_69, var_68);
  animseq = 0;
  animframe(0, 9, 3);
  var var_71 = 0xc00;
  var var_72 = 0x1f800;
  var var_73 = 0;
  spawn(1, 61, 3, 3, var_73, var_72, var_71);
  animseq = 0;
  animframe(0, 9, 3);
  var var_74 = 0xd00;
  var var_75 = 0x22800;
  var var_76 = 0;
  spawn(1, 61, 3, 3, var_76, var_75, var_74);
  animseq = 0;
  animframe(0, 9, 3);
  var var_77 = 0xe00;
  var var_78 = 0x24000;
  var var_79 = 0;
  spawn(1, 61, 3, 3, var_79, var_78, var_77);
  animseq = 0;
  animframe(0, 9, 3);
  var var_80 = 0xf00;
  var var_81 = 0x27000;
  var var_82 = 0;
  spawn(1, 61, 3, 3, var_82, var_81, var_80);
  animseq = 0;
  animframe(0, 9, 3);
  var var_83 = 0x1000;
  var var_84 = 0x28800;
  var var_85 = 0;
  spawn(1, 61, 3, 3, var_85, var_84, var_83);
  animseq = 0;
  animframe(0, 9, 3);
  var var_86 = 0x1100;
  var var_87 = 0x2b800;
  var var_88 = 0;
  spawn(1, 61, 3, 3, var_88, var_87, var_86);
  animseq = 0;
  animframe(0, 9, 3);
  var var_89 = 0x1200;
  var var_90 = 0x2d000;
  var var_91 = 0;
  spawn(1, 61, 3, 3, var_91, var_90, var_89);
  animseq = 0;
  animframe(0, 9, 3);
  var var_92 = 0x1300;
  var var_93 = 0x33000;
  var var_94 = 0;
  spawn(1, 61, 3, 3, var_94, var_93, var_92);
  animseq = 0;
  animframe(0, 9, 3);
  var var_95 = 0x1400;
  var var_96 = 0x34800;
  var var_97 = 0;
  spawn(1, 61, 3, 3, var_97, var_96, var_95);
  animseq = 0;
  animframe(0, 9, 3);
  var var_98 = 0x1500;
  var var_99 = 0x36000;
  var var_100 = 0;
  spawn(1, 61, 3, 3, var_100, var_99, var_98);
  animseq = 0;
  animframe(0, 9, 3);
  var var_101 = 0xd00;
  var var_102 = 0x39000;
  var var_103 = 0;
  spawn(1, 61, 3, 3, var_103, var_102, var_101);
  animseq = 0;
  animframe(0, 9, 3);
  var var_104 = 0x1600;
  var var_105 = 0x3a800;
  var var_106 = 0;
  spawn(1, 61, 3, 3, var_106, var_105, var_104);
  animseq = 0;
  animframe(0, 9, 3);
  var var_107 = 0x1700;
  var var_108 = 0x3d800;
  var var_109 = 0;
  spawn(1, 61, 3, 3, var_109, var_108, var_107);
  animseq = 0;
  animframe(0, 9, 3);
  var var_110 = 0x1800;
  var var_111 = 0x3f000;
  var var_112 = 0;
  spawn(1, 61, 3, 3, var_112, var_111, var_110);
  animseq = 0;
  animframe(0, 9, 3);
  var var_113 = 0x1900;
  var var_114 = 0x42000;
  var var_115 = 0;
  spawn(1, 61, 3, 3, var_115, var_114, var_113);
  animseq = 0;
  animframe(0, 9, 3);
  var var_116 = 0x1a00;
  var var_117 = 0x43800;
  var var_118 = 0;
  spawn(1, 61, 3, 3, var_118, var_117, var_116);
  animseq = 0;
  animframe(0, 9, 3);
  var var_119 = 0x1b00;
  var var_120 = 0x46800;
  var var_121 = 0;
  spawn(1, 61, 3, 3, var_121, var_120, var_119);
  animseq = 0;
  animframe(0, 9, 3);
  var var_122 = 0x1c00;
  var var_123 = 0x48000;
  var var_124 = 0;
  spawn(1, 61, 3, 3, var_124, var_123, var_122);
  animseq = 0;
  animframe(0, 9, 3);
  var var_125 = 0x1d00;
  var var_126 = 0x4b000;
  var var_127 = 0;
  spawn(1, 61, 3, 3, var_127, var_126, var_125);
  animseq = 0;
  animframe(0, 9, 3);
  var var_128 = 0x1e00;
  var var_129 = 0x4c800;
  var var_130 = 0;
  spawn(1, 61, 3, 3, var_130, var_129, var_128);
  animseq = 0;
  animframe(0, 9, 3);
  var var_131 = 0x1f00;
  var var_132 = 0x4f800;
  var var_133 = 0;
  spawn(1, 61, 3, 3, var_133, var_132, var_131);
  animseq = 0;
  animframe(0, 9, 3);
  var var_134 = 0x2000;
  var var_135 = 0x51000;
  var var_136 = 0;
  spawn(1, 61, 3, 3, var_136, var_135, var_134);
  animseq = 0;
  animframe(0, 9, 3);
  var var_137 = 0x2100;
  var var_138 = 0x54000;
  var var_139 = 0;
  spawn(1, 61, 3, 3, var_139, var_138, var_137);
  animseq = 0;
  animframe(0, 9, 3);
  var var_140 = 0x2200;
  var var_141 = 0x55800;
  var var_142 = 0;
  spawn(1, 61, 3, 3, var_142, var_141, var_140);
  animseq = 0;
  animframe(0, 9, 3);
  var var_143 = 0x2300;
  var var_144 = 0x58800;
  var var_145 = 0;
  spawn(1, 61, 3, 3, var_145, var_144, var_143);
  animseq = 0;
  animframe(0, 9, 3);
  var var_146 = 0x2400;
  var var_147 = 0x5a000;
  var var_148 = 0;
  spawn(1, 61, 3, 3, var_148, var_147, var_146);
  animseq = 0;
  animframe(0, 9, 3);
  var var_149 = 0x2500;
  var var_150 = 0x5b800;
  var var_151 = 0;
  spawn(1, 61, 3, 3, var_151, var_150, var_149);
  animseq = 0;
  animframe(0, 9, 3);
  var var_152 = 0x2600;
  var var_153 = 0x5d000;
  var var_154 = 0;
  spawn(1, 61, 3, 3, var_154, var_153, var_152);
  animseq = 0;
  animframe(0, 9, 3);
  var var_155 = 0x2700;
  var var_156 = 0x5e800;
  var var_157 = 0;
  spawn(1, 61, 3, 3, var_157, var_156, var_155);
  animseq = 0;
  animframe(0, 9, 3);
  var var_158 = 0x2800;
  var var_159 = 0x60000;
  var var_160 = 0;
  spawn(1, 61, 3, 3, var_160, var_159, var_158);
  animseq = 0;
  animframe(0, 9, 3);
  var var_161 = 0x2900;
  var var_162 = 0x61800;
  var var_163 = 0;
  spawn(1, 61, 3, 3, var_163, var_162, var_161);
  animseq = 0;
  animframe(0, 9, 3);
  var var_164 = 0x2a00;
  var var_165 = 0x63000;
  var var_166 = 0;
  spawn(1, 61, 3, 3, var_166, var_165, var_164);
  animseq = 0;
  animframe(0, 9, 3);
  var var_167 = 0x2b00;
  var var_168 = 0x64800;
  var var_169 = 0;
  spawn(1, 61, 3, 3, var_169, var_168, var_167);
  animseq = 0;
  animframe(0, 9, 3);
  var var_170 = 0x2c00;
  var var_171 = 0x66000;
  var var_172 = 0;
  spawn(1, 61, 3, 3, var_172, var_171, var_170);
  animseq = 0;
  animframe(0, 9, 3);
  var var_173 = 0x2d00;
  var var_174 = 0x67800;
  var var_175 = 0;
  spawn(1, 61, 3, 3, var_175, var_174, var_173);
  animseq = 0;
  animframe(0, 9, 3);
  var var_176 = 0x2e00;
  var var_177 = 0x69000;
  var var_178 = 0;
  spawn(1, 61, 3, 3, var_178, var_177, var_176);
  animseq = 0;
  animframe(0, 9, 3);
  var var_179 = 0x2f00;
  var var_180 = 0x6d800;
  var var_181 = 0;
  spawn(1, 61, 3, 3, var_181, var_180, var_179);
  animseq = 0;
  animframe(0, 9, 3);
  var var_182 = 0x3000;
  var var_183 = 0x6f000;
  var var_184 = 0;
  spawn(1, 61, 3, 3, var_184, var_183, var_182);
  animseq = 0;
  animframe(0, 9, 3);
  var var_185 = 0xf00;
  var var_186 = 0x72000;
  var var_187 = 0;
  spawn(1, 61, 3, 3, var_187, var_186, var_185);
  animseq = 0;
  animframe(0, 9, 3);
  var var_188 = 0x3100;
  var var_189 = 0x73800;
  var var_190 = 0;
  spawn(1, 61, 3, 3, var_190, var_189, var_188);
  animseq = 0;
  animframe(0, 9, 3);
  var var_191 = 0x1900;
  var var_192 = 0x76800;
  var var_193 = 0;
  spawn(1, 61, 3, 3, var_193, var_192, var_191);
  animseq = 0;
  animframe(0, 9, 3);
  var var_194 = 0x3200;
  var var_195 = 0x78000;
  var var_196 = 0;
  spawn(1, 61, 3, 3, var_196, var_195, var_194);
  animseq = 0;
  animframe(0, 9, 3);
  var var_197 = 0x1b00;
  var var_198 = 0x7b000;
  var var_199 = 0;
  spawn(1, 61, 3, 3, var_199, var_198, var_197);
  animseq = 0;
  animframe(0, 9, 3);
  var var_200 = 0x3300;
  var var_201 = 0x7c800;
  var var_202 = 0;
  spawn(1, 61, 3, 3, var_202, var_201, var_200);
  animseq = 0;
  animframe(0, 9, 3);
  var var_203 = 0x3400;
  var var_204 = 0x7f800;
  var var_205 = 0;
  spawn(1, 61, 3, 3, var_205, var_204, var_203);
  animseq = 0;
  animframe(0, 9, 3);
  var var_206 = 0x3500;
  var var_207 = 0x81000;
  var var_208 = 0;
  spawn(1, 61, 3, 3, var_208, var_207, var_206);
  animseq = 0;
  animframe(0, 9, 3);
  var var_209 = 0x3600;
  var var_210 = 0x82800;
  var var_211 = 0;
  spawn(1, 61, 3, 3, var_211, var_210, var_209);
  animseq = 0;
  animframe(0, 9, 3);
  var var_212 = 0x1f00;
  var var_213 = 0x85800;
  var var_214 = 0;
  spawn(1, 61, 3, 3, var_214, var_213, var_212);
  animseq = 0;
  animframe(0, 9, 3);
  var var_215 = 0x3700;
  var var_216 = 0x87000;
  var var_217 = 0;
  spawn(1, 61, 3, 3, var_217, var_216, var_215);
  animseq = 0;
  animframe(0, 9, 3);
  var var_218 = 0x1400;
  var var_219 = 0x8b800;
  var var_220 = 0;
  spawn(1, 61, 3, 3, var_220, var_219, var_218);
  animseq = 0;
  animframe(0, 9, 3);
  var var_221 = 0x3800;
  var var_222 = 0x8d000;
  var var_223 = 0;
  spawn(1, 61, 3, 3, var_223, var_222, var_221);
  animseq = 0;
  animframe(0, 9, 3);
  var var_224 = 0x1700;
  var var_225 = 0x90000;
  var var_226 = 0;
  spawn(1, 61, 3, 3, var_226, var_225, var_224);
  animseq = 0;
  animframe(0, 9, 3);
  var var_227 = 0x3900;
  var var_228 = 0x91800;
  var var_229 = 0;
  spawn(1, 61, 3, 3, var_229, var_228, var_227);
  animseq = 0;
  animframe(0, 9, 3);
  var var_230 = 0x1900;
  var var_231 = 0x94800;
  var var_232 = 0;
  spawn(1, 61, 3, 3, var_232, var_231, var_230);
  animseq = 0;
  animframe(0, 9, 3);
  var var_233 = 0x3a00;
  var var_234 = 0x96000;
  var var_235 = 0;
  spawn(1, 61, 3, 3, var_235, var_234, var_233);
  animseq = 0;
  animframe(0, 9, 3);
  var var_236 = 0x1b00;
  var var_237 = 0x99000;
  var var_238 = 0;
  spawn(1, 61, 3, 3, var_238, var_237, var_236);
  animseq = 0;
  animframe(0, 9, 3);
  var var_239 = 0x3b00;
  var var_240 = 0x9a800;
  var var_241 = 0;
  spawn(1, 61, 3, 3, var_241, var_240, var_239);
  animseq = 0;
  animframe(0, 9, 3);
  var var_242 = 0x3400;
  var var_243 = 0x9d800;
  var var_244 = 0;
  spawn(1, 61, 3, 3, var_244, var_243, var_242);
  animseq = 0;
  animframe(0, 9, 3);
  var var_245 = 0x3c00;
  var var_246 = 0x9f000;
  var var_247 = 0;
  spawn(1, 61, 3, 3, var_247, var_246, var_245);
  animseq = 0;
  animframe(0, 9, 3);
  var var_248 = 0x3d00;
  var var_249 = 0xa2000;
  var var_250 = 0;
  spawn(1, 61, 3, 3, var_250, var_249, var_248);
  animseq = 0;
  animframe(0, 9, 3);
  var var_251 = 0x3e00;
  var var_252 = 0xa3800;
  var var_253 = 0;
  spawn(1, 61, 3, 3, var_253, var_252, var_251);
  animseq = 0;
  animframe(0, 9, 3);
  var var_254 = 0x3f00;
  var var_255 = 0xa5000;
  var var_256 = 0;
  spawn(1, 61, 3, 3, var_256, var_255, var_254);
  animseq = 0;
  animframe(0, 9, 3);
  var var_257 = 0x2300;
  var var_258 = 0xa8000;
  var var_259 = 0;
  spawn(1, 61, 3, 3, var_259, var_258, var_257);
  animseq = 0;
  animframe(0, 9, 3);
  var var_260 = 0x4000;
  var var_261 = 0xa9800;
  var var_262 = 0;
  spawn(1, 61, 3, 3, var_262, var_261, var_260);
  animseq = 0;
  animframe(0, 9, 3);
  var var_263 = 0x4100;
  var var_264 = 0xae000;
  var var_265 = 0;
  spawn(1, 61, 3, 3, var_265, var_264, var_263);
  animseq = 0;
  animframe(0, 9, 3);
  var var_266 = 0x4200;
  var var_267 = 0xaf800;
  var var_268 = 0;
  spawn(1, 61, 3, 3, var_268, var_267, var_266);
  animseq = 0;
  animframe(0, 9, 3);
  var var_269 = 0x4300;
  var var_270 = 0xb5800;
  var var_271 = 0;
  spawn(1, 61, 3, 3, var_271, var_270, var_269);
  animseq = 0;
  animframe(0, 9, 3);
  var var_272 = 0x4400;
  var var_273 = 0xb7000;
  var var_274 = 0;
  spawn(1, 61, 3, 3, var_274, var_273, var_272);
  animseq = 0;
  animframe(0, 9, 3);
  var var_275 = 0x4500;
  var var_276 = 0xb8800;
  var var_277 = 0;
  spawn(1, 61, 3, 3, var_277, var_276, var_275);
  animseq = 0;
  animframe(0, 9, 3);
  var var_278 = 0x4600;
  var var_279 = 0xba000;
  var var_280 = 0;
  spawn(1, 61, 3, 3, var_280, var_279, var_278);
  animseq = 0;
  animframe(0, 9, 3);
  var var_281 = 0x4700;
  var var_282 = 0xbd000;
  var var_283 = 0;
  spawn(1, 61, 3, 3, var_283, var_282, var_281);
  animseq = 0;
  animframe(0, 9, 3);
  var var_284 = 0x4800;
  var var_285 = 0xbe800;
  var var_286 = 0;
  spawn(1, 61, 3, 3, var_286, var_285, var_284);
  animseq = 0;
  animframe(0, 9, 3);
  var var_287 = 0x4900;
  var var_288 = 0xc4800;
  var var_289 = 0;
  spawn(1, 61, 3, 3, var_289, var_288, var_287);
  animseq = 0;
  animframe(0, 9, 3);
  var var_290 = 0x4a00;
  var var_291 = 0xc6000;
  var var_292 = 0;
  spawn(1, 61, 3, 3, var_292, var_291, var_290);
  animseq = 0;
  animframe(0, 9, 3);
  var var_293 = 0x4b00;
  var var_294 = 0xc9000;
  var var_295 = 0;
  spawn(1, 61, 3, 3, var_295, var_294, var_293);
  animseq = 0;
  animframe(0, 9, 3);
  var var_296 = 0x4c00;
  var var_297 = 0xca800;
  var var_298 = 0;
  spawn(1, 61, 3, 3, var_298, var_297, var_296);
  animseq = 0;
  animframe(0, 9, 3);
  var var_299 = 0x4d00;
  var var_300 = 0xd0800;
  var var_301 = 0;
  spawn(1, 61, 3, 3, var_301, var_300, var_299);
  animseq = 0;
  animframe(0, 9, 3);
  var var_302 = 0x4e00;
  var var_303 = 0xd2000;
  var var_304 = 0;
  spawn(1, 61, 3, 3, var_304, var_303, var_302);
  animseq = 0;
  animframe(0, 9, 3);
  var var_305 = 0x4f00;
  var var_306 = 0xd3800;
  var var_307 = 0;
  spawn(1, 61, 3, 3, var_307, var_306, var_305);
  animseq = 0;
  animframe(0, 9, 3);
  var var_308 = 0x5000;
  var var_309 = 0xd6800;
  var var_310 = 0;
  spawn(1, 61, 3, 3, var_310, var_309, var_308);
  animseq = 0;
  animframe(0, 9, 3);
  var var_311 = 0x5100;
  var var_312 = 0xd8000;
  var var_313 = 0;
  spawn(1, 61, 3, 3, var_313, var_312, var_311);
  animseq = 0;
  animframe(0, 9, 3);
  var var_314 = 0x5200;
  var var_315 = 0xd9800;
  var var_316 = 0;
  spawn(1, 61, 3, 3, var_316, var_315, var_314);
  animseq = 0;
  animframe(0, 9, 3);
  var var_317 = 0x5300;
  var var_318 = 0xdf800;
  var var_319 = 0;
  spawn(1, 61, 3, 3, var_319, var_318, var_317);
  animseq = 0;
  animframe(0, 9, 3);
  var var_320 = 0x5400;
  var var_321 = 0xe1000;
  var var_322 = 0;
  spawn(1, 61, 3, 3, var_322, var_321, var_320);
  animseq = 0;
  animframe(0, 9, 3);
  var var_323 = 0x4100;
  var var_324 = 0xe7000;
  var var_325 = 0;
  spawn(1, 61, 3, 3, var_325, var_324, var_323);
  animseq = 0;
  animframe(0, 9, 3);
  var var_326 = 0x5500;
  var var_327 = 0xea000;
  var var_328 = 0;
  spawn(1, 61, 3, 3, var_328, var_327, var_326);
  animseq = 0;
  animframe(0, 9, 3);
  var var_329 = 0x5600;
  var var_330 = 0xeb800;
  var var_331 = 0;
  spawn(1, 61, 3, 3, var_331, var_330, var_329);
  animseq = 0;
  animframe(0, 9, 3);
  var var_332 = 0x5700;
  var var_333 = 0xed000;
  var var_334 = 0;
  spawn(1, 61, 3, 3, var_334, var_333, var_332);
  animseq = 0;
  animframe(0, 9, 3);
  var var_335 = 0x5800;
  var var_336 = 0xee800;
  var var_337 = 0;
  spawn(1, 61, 3, 3, var_337, var_336, var_335);
  animseq = 0;
  animframe(0, 9, 3);
  var var_338 = 0x5900;
  var var_339 = 0xf0000;
  var var_340 = 0;
  spawn(1, 61, 3, 3, var_340, var_339, var_338);
  animseq = 0;
  animframe(0, 9, 3);
  var var_341 = 0x5a00;
  var var_342 = 0xf1800;
  var var_343 = 0;
  spawn(1, 61, 3, 3, var_343, var_342, var_341);
  animseq = 0;
  animframe(0, 9, 3);
  var var_344 = 0x5b00;
  var var_345 = 0xf3000;
  var var_346 = 0;
  spawn(1, 61, 3, 3, var_346, var_345, var_344);
  animseq = 0;
  animframe(0, 9, 3);
  var var_347 = 0x5c00;
  var var_348 = 0xf4800;
  var var_349 = 0;
  spawn(1, 61, 3, 3, var_349, var_348, var_347);
  animseq = 0;
  animframe(0, 9, 3);
  var var_350 = 0x5d00;
  var var_351 = 0xfa800;
  var var_352 = 0;
  spawn(1, 61, 3, 3, var_352, var_351, var_350);
  animseq = 0;
  animframe(0, 9, 3);
  var var_353 = 0x5e00;
  var var_354 = 0xfc000;
  var var_355 = 0;
  spawn(1, 61, 3, 3, var_355, var_354, var_353);
  animseq = 0;
  animframe(0, 9, 3);
  var var_356 = 0x5f00;
  var var_357 = 0x102000;
  var var_358 = 0;
  spawn(1, 61, 3, 3, var_358, var_357, var_356);
  animseq = 0;
  animframe(0, 9, 3);
  var var_359 = 0x6000;
  var var_360 = 0x103800;
  var var_361 = 0;
  spawn(1, 61, 3, 3, var_361, var_360, var_359);
  animseq = 0;
  animframe(0, 9, 3);
  var var_362 = 0x6100;
  var var_363 = 0x105000;
  var var_364 = 0;
  spawn(1, 61, 3, 3, var_364, var_363, var_362);
  animseq = 0;
  animframe(0, 9, 3);
  var var_365 = 0x6200;
  var var_366 = 0x106800;
  var var_367 = 0;
  spawn(1, 61, 3, 3, var_367, var_366, var_365);
  animseq = 0;
  animframe(0, 9, 3);
  var var_368 = 0x6300;
  var var_369 = 0x108000;
  var var_370 = 0;
  spawn(1, 61, 3, 3, var_370, var_369, var_368);
  animseq = 0;
  animframe(0, 9, 3);
  var var_371 = 0x6400;
  var var_372 = 0x109800;
  var var_373 = 0;
  spawn(1, 61, 3, 3, var_373, var_372, var_371);
  animseq = 0;
  animframe(0, 9, 3);
}

void func_1758(arg1)
{
  unk_F8 = 0x100;
  statusb = 0x300;
  trans.x = 0;
  trans.y = -0xc800;
  trans.z = 0;
  rot.x = 0;
  rot.y = 0;
  rot.z = 0;
  pctrans = 0;
  var var_374 = arg1;
  if ((fp[0xc] == 0))
  {
    codepointer(1772, self->pctrans);
    func_e80();
    unk_F8 = 0;
  }
  else if ((fp[0xc] == 0x500))
  {
    trans.x = 0x6400;
    if ((readglobal(0,) == 0x3900))
    {
      var var_375 = 0x6500;
      var var_376 = 0xfffee800;
      var var_377 = 0x1;
      spawn(1, 61, 3, 3, var_377, var_376, var_375);
    }
    else
    {
      var var_378 = 0x6600;
      var var_379 = 0xfffee800;
      var var_380 = 0x1;
      spawn(1, 61, 3, 3, var_380, var_379, var_378);
      var var_381 = 0x6700;
      var var_382 = 0xfffef600;
      var var_383 = 0x1;
      spawn(1, 61, 3, 3, var_383, var_382, var_381);
      var var_384 = 0x6800;
      var var_385 = -0xfc00;
      var var_386 = 0x1;
      spawn(1, 61, 3, 3, var_386, var_385, var_384);
      var var_387 = 0x6900;
      var var_388 = -0xee00;
      var var_389 = 0x1;
      spawn(1, 61, 3, 3, var_389, var_388, var_387);
      var var_390 = 0x6a00;
      var var_391 = -0xd200;
      var var_392 = 0x1;
      spawn(1, 61, 3, 3, var_392, var_391, var_390);
      var var_393 = 0x6b00;
      var var_394 = -0xc400;
      var var_395 = 0x1;
      spawn(1, 61, 3, 3, var_395, var_394, var_393);
      var var_396 = 0x6c00;
      var var_397 = -0xb600;
      var var_398 = 0x1;
      spawn(1, 61, 3, 3, var_398, var_397, var_396);
      var var_399 = 0x6d00;
      var var_400 = -0xa800;
      var var_401 = 0x1;
      spawn(1, 61, 3, 3, var_401, var_400, var_399);
      var var_402 = 0x6e00;
      var var_403 = -0x9a00;
      var var_404 = 0x1;
      spawn(1, 61, 3, 3, var_404, var_403, var_402);
    }
  }
  else if ((fp[0xc] == 0x200))
  {
    trans.x = 0x6400;
    if ((readglobal(0,) == 0x3900))
    {
      var var_405 = 0x6f00;
      var var_406 = 0xfffee800;
      var var_407 = 0x1;
      spawn(1, 61, 3, 3, var_407, var_406, var_405);
      var var_408 = 0x7000;
      var var_409 = 0xfffef600;
      var var_410 = 0x1;
      spawn(1, 61, 3, 3, var_410, var_409, var_408);
    }
    else
    {
      var var_411 = 0x7100;
      var var_412 = 0xfffee800;
      var var_413 = 0x1;
      spawn(1, 61, 3, 3, var_413, var_412, var_411);
      var var_414 = 0x7200;
      var var_415 = 0xfffef600;
      var var_416 = 0x1;
      spawn(1, 61, 3, 3, var_416, var_415, var_414);
      var var_417 = 0x7300;
      var var_418 = -0xfc00;
      var var_419 = 0x1;
      spawn(1, 61, 3, 3, var_419, var_418, var_417);
      var var_420 = 0x7400;
      var var_421 = -0xee00;
      var var_422 = 0x1;
      spawn(1, 61, 3, 3, var_422, var_421, var_420);
      var var_423 = 0x7500;
      var var_424 = -0xe000;
      var var_425 = 0x1;
      spawn(1, 61, 3, 3, var_425, var_424, var_423);
      var var_426 = 0x7600;
      var var_427 = -0xd200;
      var var_428 = 0x1;
      spawn(1, 61, 3, 3, var_428, var_427, var_426);
      var var_429 = 0x7700;
      var var_430 = -0xb600;
      var var_431 = 0x1;
      spawn(1, 61, 3, 3, var_431, var_430, var_429);
      var var_432 = 0x7800;
      var var_433 = -0xa800;
      var var_434 = 0x1;
      spawn(1, 61, 3, 3, var_434, var_433, var_432);
    }
  }
  else if ((fp[0xc] == 0x300))
  {
    trans.x = 0x6400;
    if ((readglobal(0,) == 0x3900))
    {
      var var_435 = 0x7900;
      var var_436 = 0xfffee800;
      var var_437 = 0x1;
      spawn(1, 61, 3, 3, var_437, var_436, var_435);
    }
    else
    {
      var var_438 = 0x7a00;
      var var_439 = 0xfffee800;
      var var_440 = 0x1;
      spawn(1, 61, 3, 3, var_440, var_439, var_438);
      var var_441 = 0x7b00;
      var var_442 = 0xfffef600;
      var var_443 = 0x1;
      spawn(1, 61, 3, 3, var_443, var_442, var_441);
      var var_444 = 0x7c00;
      var var_445 = -0xfc00;
      var var_446 = 0x1;
      spawn(1, 61, 3, 3, var_446, var_445, var_444);
      var var_447 = 0x7d00;
      var var_448 = -0xee00;
      var var_449 = 0x1;
      spawn(1, 61, 3, 3, var_449, var_448, var_447);
      var var_450 = 0x7e00;
      var var_451 = -0xe000;
      var var_452 = 0x1;
      spawn(1, 61, 3, 3, var_452, var_451, var_450);
      var var_453 = 0x7f00;
      var var_454 = -0xc400;
      var var_455 = 0x1;
      spawn(1, 61, 3, 3, var_455, var_454, var_453);
      var var_456 = 0x8000;
      var var_457 = -0xb600;
      var var_458 = 0x1;
      spawn(1, 61, 3, 3, var_458, var_457, var_456);
      var var_459 = 0x8100;
      var var_460 = -0xa800;
      var var_461 = 0x1;
      spawn(1, 61, 3, 3, var_461, var_460, var_459);
      var var_462 = 0x8200;
      var var_463 = -0x9a00;
      var var_464 = 0x1;
      spawn(1, 61, 3, 3, var_464, var_463, var_462);
    }
  }
  else if ((fp[0xc] == 0x400))
  {
    trans.x = 0x6400;
    if ((readglobal(0,) == 0x3900))
    {
      var var_465 = 0x8300;
      var var_466 = 0xfffee800;
      var var_467 = 0x1;
      spawn(1, 61, 3, 3, var_467, var_466, var_465);
      var var_468 = 0x7000;
      var var_469 = -0xfc00;
      var var_470 = 0x1;
      spawn(1, 61, 3, 3, var_470, var_469, var_468);
    }
    else
    {
      var var_471 = 0x8400;
      var var_472 = 0xfffee800;
      var var_473 = 0x1;
      spawn(1, 61, 3, 3, var_473, var_472, var_471);
      var var_474 = 0x8500;
      var var_475 = 0xfffef600;
      var var_476 = 0x1;
      spawn(1, 61, 3, 3, var_476, var_475, var_474);
      var var_477 = 0x8600;
      var var_478 = -0xfc00;
      var var_479 = 0x1;
      spawn(1, 61, 3, 3, var_479, var_478, var_477);
      var var_480 = 0x8700;
      var var_481 = -0xee00;
      var var_482 = 0x1;
      spawn(1, 61, 3, 3, var_482, var_481, var_480);
      var var_483 = 0x8800;
      var var_484 = -0xe000;
      var var_485 = 0x1;
      spawn(1, 61, 3, 3, var_485, var_484, var_483);
      var var_486 = 0x8900;
      var var_487 = -0xd200;
      var var_488 = 0x1;
      spawn(1, 61, 3, 3, var_488, var_487, var_486);
      var var_489 = 0x8a00;
      var var_490 = -0xc400;
      var var_491 = 0x1;
      spawn(1, 61, 3, 3, var_491, var_490, var_489);
      var var_492 = 0x8b00;
      var var_493 = -0xa800;
      var var_494 = 0x1;
      spawn(1, 