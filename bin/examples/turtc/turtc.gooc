void func_0()
{
  var var_0 = 0;
  var var_1 = ireg[0x70];
  var var_2 = ireg[0x80];
  spawn(1, 29, 1, 3, var_2, var_1, var_0);
  hotspotclip = 0x3c00;
  if (self->modeflagsa)
    unk_154 = modeflagsa;
  else
    unk_154 = ireg[0x8c];
  if (self->modeflagsb)
    field[0x170] = modeflagsb;
  else
    field[0x170] = ireg[0xac];
  if (self->modeflagsc)
    field[0x16c] = (modeflagsc << ireg[0x14]);
  else
    field[0x16c] = ireg[0x18];
  field[0x160] = 0;
  zindex = ireg[0x1c];
  field[0x174] = 0;
  if ((self->subtype == ireg[0x20]))
  {
    rot.x = random(0x1000, 0);
    statusb = ireg[0x24];
    state 3;
  }
  else if ((self->subtype == 0))
  {
    statusb = ireg[0x28];
    state 2;
  }
  else if ((self->subtype == ireg[0x2c]))
  {
    statusb = ireg[0x28];
    state 2;
  }
  else
  {
    statusb = ireg[0x30];
    state 1;
  }
}

void func_a0()
{
  targetrot.y = 0x800;
  approachyz = ireg[0x34];
  do
  {
    animpointer(0);
    animframe = 0x400;
    do
    {
      animframe((animframe + 0x100), 1, 3);
    } while (!((animframe + 0x100) < 0x1000));
    animframe = -0x100;
    do
    {
      animframe((animframe + 0x100), 1, 3);
    } while (!((animframe + 0x100) < 0x400));
  }
}

void func_e4()
{
  var var_3 = ireg[0x38];
  var var_4 = ireg[0x20];
  targetrot.x += (trianglewave(&field[0x160], var_4, var_3) - ireg[0x3c]);
  if ((abs(angulardist(targetrot.x, rot.x)) < ireg[0x40]))
  {
    if ((statusa tst 0x200))
    {
      targetrot.x -= (ireg[0x48] + random(ireg[0x44], 0));
      vectormisca(ireg[0x4c], self->velocity.x);
    }
  }
  else
  {
    velocity.x = (velocity.x << ireg[0x50]);
    velocity.z = (velocity.z << ireg[0x50]);
  }
  var var_5 = 0x6400;
  sendevent(0x300, self->collider, 1, (statusa tst 0x1000), var_5);
}

void func_148()
{
  targetrot.y = 0x800;
  approachyz = ireg[0x34];
  do
  {
    animpointer(0);
    animframe = 0x900;
    do
    {
      animframe((animframe + 0x100), 1, 3);
    } while (!((animframe + 0x100) < 0x1000));
    animframe = -0x100;
    do
    {
      animframe((animframe + 0x100), 1, 3);
    } while (!((animframe + 0x100) < 0x900));
  }
}

void func_18c()
{
  if ((statusa tst 0.0625))
  {
    if ((statusa tst 0x800))
    {
      targetrot.y = 0x800;
      statusb |= ireg[0x54];
      statusa &= ireg[0x58];
    }
  }
  else
  {
    var var_6 = (pathcount + (field[0x16c] + -0x100));
    var var_7 = field[0x16c];
    vectormisca(trianglewave(&pathprogress, var_7, var_6), self->trans.x);
    if ((statusa tst 0.0625))
    {
      targetrot.y = 0x2000;
      statusb &= ireg[0x5c];
    }
    trans.y += 0x6400;
    if ((self->subtype == 0))
    {
      var var_8 = 0;
      var var_9 = 0;
      var var_10 = targetrot.x;
      var var_11 = statusa;
      var var_12 = statusb;
      var var_13 = trans.x;
      var var_14 = trans.y;
      var var_15 = trans.z;
      var var_16 = pathprogress;
      statusb = ireg[0x60];
      trans.x = player->trans.x;
      trans.y = player->trans.y;
      trans.z = player->trans.z;
      vectormisca(0, self->trans.x);
      targetrot.x += 0x400;
      vectormisca(field[0x174], self->velocity.x);
      pathprogress = fp[0x2c];
      trans.z = fp[0x28];
      trans.y = fp[0x24];
      trans.x = fp[0x20];
      statusb = fp[0x1c];
      statusa = fp[0x18];
      targetrot.x = fp[0x14];
      trans.x += velocity.x;
      trans.z += velocity.z;
      fp[0xc] = targetrot.x;
      if ((abs((field[0x174] - modeflagsb)) > 0x2800))
      {
        fp[0x10] = angulardist(misc(player->trans.x, self->self), targetrot.x);
        if ((fp[0x10] < ireg[0x64]))
          fp[0x10] = ireg[0x64];
        else if ((fp[0x10] > ireg[0x68]))
          fp[0x10] = ireg[0x68];
        targetrot.x += fp[0x10];
      }
      var var_17 = modeflagsb;
      var var_18 = var_17;
      field[0x174] = approach(doublesp(), field[0x174]);
      if ((field[0x174] < -unk_154))
      {
        targetrot.x = fp[0xc];
        field[0x174] = -unk_154;
      }
      else if ((field[0x174] > unk_154))
      {
        targetrot.x = fp[0xc];
        field[0x174] = unk_154;
      }
      var var_19 = ireg[0x38];
      var var_20 = ireg[0x20];
    }
    targetrot.x += (trianglewave(&field[0x160], var_20, var_19) - ireg[0x3c]);
  }
  if ((statusa tst 0x1000))
  {
    var var_21 = 0x6400;
    sendevent(0x300, self->collider, 1, (player->statusa tst ireg[0x2c]), var_21);
  }
}

void func_300(arg1)
{
  if ((self->subtype == ireg[0x20]))
    animpointer(0x600);
  else
  {
    var var_22 = arg1;
    sendevent(0x1000, self->player, 1, self->self, var_22);
    velocity.x = 0;
    velocity.y = 0;
    velocity.z = 0;
    targetrot.y = 0x400;
    audiob(0x400, self->self, 1);
    audiob(ireg[0x20], self->self, 7);
    playsound(ireg[0x74], ireg[0x4]);
    animpointer(0x200);
    animframe = -0x100;
    do
    {
      animframe((animframe + 0x100), 1, 3);
    } while (!((animframe + 0x100) <= 0x900));
    animpointer(0x600);
    animframe = -0x100;
    do
    {
      animframe((animframe + 0x100), 1, 3);
    } while (!((animframe + 0x100) <= 0x1500));
    field[0x164] = stampanim;
  }
  do
  {
    animframe(0x1500, 60, 3);
    animframe(0x1500, 45, 3);
  } while ();
}

targetrot.x += ireg[0x7c];

animframe(0x1500, 24, 3);


